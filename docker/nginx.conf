# vim: set ft=nginx ts=4 sw=4 et:

user http http;

# Tell NGINX to auto-scale worker processes based on CPU count
worker_processes auto;

# Up the file limit
worker_rlimit_nofile 8192;

events {
    # If you need more connections than this, you start optimizing your OS.
    # That's probably the point at which you hire people who are smarter than you as this is *a lot* of requests.
    # Should be < worker_rlimit_nofile.
    # Default: 512
    worker_connections 8000;
}

# Log errors and warnings to stderr
error_log /proc/self/fd/2 warn;

http {
    # Hide nginx version information.
    server_tokens off;

    # Specify MIME types for files.
    include       mime.types;

    # Default: text/plain
    default_type  application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    # Default: text/html text/xml text/plain text/vnd.wap.wml application/javascript application/rss+xml
    charset_types
        text/css
        text/plain
        text/vnd.wap.wml
        application/javascript
        application/json
        application/rss+xml
        application/xml;

    # Include $http_x_forwarded_for within default format used in log files
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" session="$cookie_matcha_session"';

    # Log access to this file
    # This is only used when you don't override it on a server{} level
    # Default: logs/access.log combined
    access_log /proc/self/fd/1 main;

    # How long to allow each connection to stay idle.
    # Longer values are better for each individual client, particularly for SSL,
    # but means that worker connections are tied up longer.
    # Default: 75s
    keepalive_timeout 20s;

    # Speed up file transfers by using sendfile() to copy directly
    # between descriptors rather than using read()/write().
    # For performance reasons, on FreeBSD systems w/ ZFS
    # this option should be disabled as ZFS's ARC caches
    # frequently used files in RAM by default.
    # Default: off
    sendfile        on;

    # Don't send out partial frames; this increases throughput
    # since TCP frames are filled up before being sent out.
    # Default: off
    tcp_nopush      on;

    # Enable gzip compression.
    # Default: off
    gzip on;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and CPU usage, offering about
    # 75% reduction for most ASCII files (almost identical to level 9).
    # Default: 1
    gzip_comp_level    5;

    server {
        listen [::]:12316;
        listen 12316;

        # The host name to respond to
        server_name _;

        # Path for static files
        root /srv/http/matcha/public;

        # Specify a charset
        charset utf-8;

        # Include the basic h5bp config set
        include h5bp/basic.conf;

        # Tell user agents to disallow XSS
        include h5bp/directive-only/extra-security.conf;

        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
        fastcgi_connect_timeout 300s;
        fastcgi_send_timeout 300s;
        fastcgi_read_timeout 300s;

        #set_real_ip_from 127.0.0.1;
        #real_ip_header X-Forwarded-For;
        #real_ip_recursive on;
    
        index index.php index.html index.htm;

        # Redirect trailing slash urls to avoid duplicate content in search engine results
        rewrite ^(.+)/+$ $1 permanent;
        rewrite ^(.+)/index.html$ $1 permanent;

        # Redirect 404 back to Phalcon
        error_page 404 = /index.php?_url=$uri&$args;
        error_page 500 502 503 504 /maintenance.html;

        # Represents the root of the domain
        location / {
            # Matches URLS `$_GET['_url']`
            try_files $uri $uri/ /index.php?_url=$uri&$args;
        }

        # When the HTTP request does not match the above
        # and the file ends in .php
        location ~ [^/]\.php(/|$) {
            #try_files $uri =404;

            # Ubuntu and PHP7.0-fpm in socket mode
            # This path is dependent on the version of PHP install
            fastcgi_pass unix:/run/matcha.sock;

            # Alternatively you use PHP-FPM in TCP mode (Required on Windows)
            # You will need to configure FPM to listen on a standard port
            # https://www.nginx.com/resources/wiki/start/topics/examples/phpfastcgionwindows/
            #fastcgi_pass  127.0.0.1:9000;

            fastcgi_index /index.php;

            include fastcgi_params;
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }

            fastcgi_param PATH_INFO       $fastcgi_path_info;
            # fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
            # and set php.ini cgi.fix_pathinfo=0

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        location ~ /\.ht {
            deny all;
        }
    }
}
